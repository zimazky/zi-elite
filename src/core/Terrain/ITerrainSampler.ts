import { AutoDiff3 } from 'src/shared/libs/AutoDiff'
import { Vec3 } from 'src/shared/libs/vectors'

/** Интерфейс генератора ландшафта */
export default interface ITerrainSampler {
  /** масштаб по высоте */
  H_SCALE: number
  /** масштаб по горизонтали */
  W_SCALE: number
  /** максимальная высота ландшафта */
  MAX_TRN_ELEVATION: number

  /** 
   * Функция проверяющая превышена ли высота текущей точки над максимальной высотой ландшафта 
   * @param p - координаты точки в системе координат камеры
   */
  //isHeightGreaterMax(p: Vec3): boolean
  /** 
   * Функция определения высоты заданной точки над поверхностью 
   * @param p - координаты точки в системе координат камеры
   */
  //altitude(p: Vec3): number

  /**
   * Перевод декартовых координат точки в сферические координаты относительно центра планеты 
   * ( или псевдосферические для плоской поверхности )
   * Начало декартовых координат совпадает с точкой 0,0,0 на сфере
   * @param p - координаты точки
   * @returns 
   * x - долгота (x для псевдосферических координат)
   * y - широта (z для псевдосферических координат)
   * z - высота над поверхностью сферы (z для псевдосферических координат)
   */
  lonLatAlt(p: Vec3): Vec3

  /**
   * Функция определения высоты поверхности под заданной точкой 
   * @param p - координаты точки в системе координат камеры
   */
  height(p: Vec3): number
  /**
   * Функция определения высоты поверхности и нормали к поверхности под заданной точкой 
   * @param p - координаты точки в системе координат камеры
   */
  heightNormal(p: Vec3): AutoDiff3

  /** 
   * Функция определения вектора направления на зенит 
   * @param p - координаты точки в системе координат камеры
   */
  zenith(p: Vec3): Vec3
  /**
   * Пересчет координат относительно центра планеты
   * @param p - координаты точки в системе координат камеры
   */
  fromCenter(p: Vec3): Vec3
  /**
   * Функция определения нормали к поверхности под заданной точкой (в точке пересечения отвеса)
   * @param p - координаты точки в системе координат камеры
   */
  normal(p: Vec3): Vec3
}